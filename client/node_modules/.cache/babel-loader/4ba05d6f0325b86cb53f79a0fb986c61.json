{"ast":null,"code":"var _jsxFileName = \"D:\\\\weeve\\\\client\\\\src\\\\features\\\\serviceList\\\\serviceList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Service from '../../components/service/Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ServiceList() {\n  _s();\n\n  const [services, setServices] = useState([]);\n  const [value, setValue] = useState('');\n\n  const changeAlert = prevAlert => !prevAlert;\n\n  const fetchServices = async () => {\n    try {\n      const data = await fetch(\"http://localhost:5000/\");\n      const response = await data.json();\n      setServices(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const update = async name => {\n    const body = {\n      name\n    };\n    const data = await fetch(`http://localhost:5000/${element.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const response = await data.json();\n    console.log(response);\n    changeAlert();\n  };\n\n  const handleChange = () => {\n    let value = prompt(\"Enter service name...\");\n    if (!value) return;\n    update(value);\n  };\n\n  useEffect(() => {\n    fetchServices();\n  }, [value]);\n  console.log(services);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"service-list\",\n    children: services.map(element => /*#__PURE__*/_jsxDEV(Service, {\n      element: element,\n      alert: alert,\n      changeAlert: changeAlert\n    }, element.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ServiceList, \"65n0uRaHQ2eBveXHLPWGNavopcM=\");\n\n_c = ServiceList;\nexport default ServiceList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceList\");","map":{"version":3,"sources":["D:/weeve/client/src/features/serviceList/serviceList.js"],"names":["React","useState","useEffect","Service","ServiceList","services","setServices","value","setValue","changeAlert","prevAlert","fetchServices","data","fetch","response","json","error","console","log","message","update","name","body","element","id","method","headers","JSON","stringify","handleChange","prompt","map","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kCAApB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,WAAW,GAAIC,SAAD,IAAc,CAACA,SAAnC;;AACA,QAAMC,aAAa,GAAE,YAAS;AAC1B,QAAI;AACF,YAAMC,IAAI,GAAC,MAAMC,KAAK,CAAC,wBAAD,CAAtB;AACA,YAAMC,QAAQ,GAAE,MAAMF,IAAI,CAACG,IAAL,EAAtB;AACAT,MAAAA,WAAW,CAACQ,QAAD,CAAX;AACD,KAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,GARH;;AAUE,QAAMC,MAAM,GAAC,MAAMC,IAAN,IAAc;AACzB,UAAMC,IAAI,GAAC;AAACD,MAAAA;AAAD,KAAX;AACA,UAAMT,IAAI,GAAC,MAAMC,KAAK,CAAE,yBAAwBU,OAAO,CAACC,EAAG,EAArC,EAAuC;AACzDC,MAAAA,MAAM,EAAE,OADiD;AAEzDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFgD;AAGzDJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHmD,KAAvC,CAAtB;AAKA,UAAMR,QAAQ,GAAE,MAAMF,IAAI,CAACG,IAAL,EAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAL,IAAAA,WAAW;AAEd,GAXC;;AAaF,QAAMoB,YAAY,GAAG,MAAM;AACvB,QAAItB,KAAK,GAACuB,MAAM,CAAC,uBAAD,CAAhB;AACA,QAAG,CAACvB,KAAJ,EAAW;AACXa,IAAAA,MAAM,CAACb,KAAD,CAAN;AACH,GAJD;;AAKEL,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,aAAa;AACd,GAFQ,EAEP,CAACJ,KAAD,CAFO,CAAT;AAIAU,EAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACF,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACOA,QAAQ,CAAC0B,GAAT,CAAcR,OAAD,iBACV,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,OAAlB;AAA2B,MAAA,KAAK,EAAES,KAAlC;AAA0D,MAAA,WAAW,EAAEvB;AAAvE,OAA8Cc,OAAO,CAACC,EAAtD;AAAA;AAAA;AAAA;AAAA,YADH;AADP;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA7CQpB,W;;KAAAA,W;AA+CT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Service from '../../components/service/Service'\r\n\r\nfunction ServiceList() {\r\n    const [services, setServices]= useState([]);\r\n    const [value, setValue] = useState('');\r\n\r\n    const changeAlert = (prevAlert)=> !prevAlert; \r\n    const fetchServices= async()=>{\r\n        try {\r\n          const data=await fetch(\"http://localhost:5000/\");\r\n          const response= await data.json();\r\n          setServices(response)\r\n        } catch (error) {\r\n          console.log(error.message)\r\n        }\r\n      }\r\n\r\n      const update=async(name)=> {\r\n        const body={name}\r\n        const data=await fetch(`http://localhost:5000/${element.id}`,{\r\n            method: \"PATCH\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n        })\r\n        const response= await data.json();\r\n        console.log(response)\r\n        changeAlert()\r\n       \r\n    }\r\n\r\n    const handleChange = () => {\r\n        let value=prompt(\"Enter service name...\");\r\n        if(!value) return;\r\n        update(value);\r\n    }\r\n      useEffect(()=>{\r\n        fetchServices()\r\n      },[value])\r\n      \r\n      console.log(services)\r\n    return (\r\n        <div className=\"service-list\">\r\n              {services.map((element)=>(\r\n                  <Service element={element} alert={alert} key={element.id} changeAlert={changeAlert} />\r\n              ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ServiceList\r\n"]},"metadata":{},"sourceType":"module"}